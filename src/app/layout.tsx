import type { Metadata } from 'next'
import { Geist, Geist_Mono } from 'next/font/google'
import './globals.css'
import { Providers } from './providers'
import { redirect } from 'next/navigation'
import { createClient } from '@supabase/supabase-js'

// Supabase 서버 클라이언트
const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
)

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
})

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
})

export const metadata: Metadata = {
  title: 'AI 육아코치',
  description: 'Generated by create next app',
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  // 로그인 세션 가져오기
  const { data: session } = await supabase.auth.getSession()
  const userId = session?.session?.user?.id

  // 설문 완료 여부 확인 후 리다이렉트
  if (userId) {
    const { data: answers } = await supabase
      .from('survey_answers')
      .select('question_id')
      .eq('user_id', userId)
      .in('question_id', [3, 5, 10, 11])

    // 설문 4개 답변 모두 있으면 coach로 이동
    if (answers && answers.length === 4) {
      redirect('/coach')
    }
  }

  return (
    <html lang="ko">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <Providers>{children}</Providers>
      </body>
    </html>
  )
}
